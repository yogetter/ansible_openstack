---
- name: Create neutron databases
  mysql_db: name=neutron state=present login_password={{ db_passwd  }}
  become: true 

- name: Create neutron user
  mysql_user: name=neutron password={{ neutron_passwd  }}  host={{ item  }} priv=neutron.*:ALL,GRANT append_privs=yes login_password={{ neutron_passwd  }} state=present 
  with_items:
  - '%' 
  - localhost
  become: true

- name: Create neutron environment in keystone
  script: "./roles/newton_controller/scripts/create_neutron_environment.sh {{ controller_ip  }} {{ neutron_passwd  }}"
  become: true

- name: Install neutron
  apt: name={{ item }} state=latest
  with_items:
  - neutron-server 
  - neutron-plugin-ml2
  - neutron-linuxbridge-agent
  - neutron-l3-agent 
  - neutron-dhcp-agent 
  - neutron-metadata-agent
  become: true


- name: Configure neutron(1)
  replace: dest=/etc/neutron/neutron.conf regexp={{ item.reg  }} replace={{ item.replace  }}  backup=yes
  with_items:
  - { reg: '^connection', replace: '#connection'}
  - { reg: '^core_plugin', replace: '#core_plugin'}
  - { reg: '^service_plugins', replace: '#service_plugins'}
  - { reg: '^allow_overlapping_ips', replace: '#allow_overlapping_ips'}
  become: true

- name: Configure neutron(2)
  lineinfile: dest=/etc/neutron/neutron.conf insertafter='\\[database' line='connection = mysql+pymysql://neutron:{{ neutron_passwd  }}@{{ controller_ip  }}/neutron'  backup=yes state=present
  become: true


- name: Configure neutron(3)
  lineinfile: dest=/etc/neutron/neutron.conf insertafter='^\\[DEFAULT' line={{ item  }} backup=yes state=present
  with_items:
  - "core_plugin = ml2" 
  - "service_plugins = router"
  - "allow_overlapping_ips = True"
  - "rpc_backend = rabbit"
  - "auth_strategy = keystone"
  - "notify_nova_on_port_status_changes = True"
  - "notify_nova_on_port_data_changes = True"
  become: true

- name: Configure neutron(4)
  lineinfile: "dest=/etc/neutron/neutron.conf insertafter='^\\[keystone_authtoken' line='auth_uri = http://{{ controller_ip }}:5000\n
  auth_url = http://{{ controller_ip }}:35357\n
  memcached_servers = {{ controller_ip }}:11211\n
  auth_type = password\n
  project_domain_name = default\n
  user_domain_name = default\n
  project_name = service\n
  username = neutron\n
  password = {{ neutron_passwd }}' backup=yes state=present"
  become: true

- name: Configure neutron(5)
  lineinfile: "dest=/etc/neutron/neutron.conf insertafter='^\\[oslo_messaging_rabbit' line='rabbit_host = {{ controller_ip }}\n
  rabbit_userid = openstack\n
  rabbit_password = {{ rabbit_passwd }}' backup=yes state=present"
  become: true

- name: Configure neutron(6)
  lineinfile: "dest=/etc/neutron/neutron.conf insertafter='^\\[nova' line='auth_url = http://{{ controller_ip }}:35357\n
  auth_type = password\n
  project_domain_name = default\n
  user_domain_name = default\n
  region_name = RegionOne\n
  project_name = service\n
  username = nova\n
  password = {{ nova_passwd }}' backup=yes state=present"
  become: true

- name: Configure neutron(7)
  lineinfile: "dest=/etc/neutron/plugins/ml2/ml2_conf.ini insertafter='^\\[ml2\\]' line='type_drivers = flat,vlan,vxlan\n
  tenant_network_types = vxlan\n
  mechanism_drivers = linuxbridge,l2population\n
  extension_drivers = port_security' backup=yes state=present"
  become: true

- name: Configure neutron(8)
  lineinfile: "dest=/etc/neutron/plugins/ml2/ml2_conf.ini insertafter='^\\[ml2_type_flat' line='flat_networks = provider' backup=yes state=present"
  become: true

- name: Configure neutron(9)
  lineinfile: "dest=/etc/neutron/plugins/ml2/ml2_conf.ini insertafter='^\\[ml2_type_vxlan' line='vni_ranges = 1:1000' backup=yes state=present"
  become: true

- name: Configure neutron(10)
  lineinfile: "dest=/etc/neutron/plugins/ml2/ml2_conf.ini insertafter='^\\[securitygroup' line='enable_ipset = True' backup=yes state=present"
  become: true

- name: Configure neutron(11)
  lineinfile: "dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini insertafter='^\\[linux_bridge' line='physical_interface_mappings = provider:{{ provider_nic }}' backup=yes state=present"
  become: true

- name: Configure neutron(12)
  lineinfile: "dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini insertafter='^\\[vxlan' line='enable_vxlan = True\n
  local_ip = {{ controller_ip }}\n
  l2_population = True' backup=yes state=present"
  become: true

- name: Configure neutron(13)
  lineinfile: "dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini insertafter='^\\[securitygroup' line='enable_security_group = True\n
  firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver' backup=yes state=present"
  become: true

- name: Configure neutron(14)
  lineinfile: "dest=/etc/neutron/l3_agent.ini insertafter='^\\[DEFAULT' line='interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver\n
  external_network_bridge =' backup=yes state=present"
  become: true

- name: Configure neutron(14)
  lineinfile: "dest=/etc/neutron/dhcp_agent.ini insertafter='^\\[DEFAULT' line='interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver\n
  dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq\n
  enable_isolated_metadata = True' backup=yes state=present"
  become: true

- name: Configure neutron(15)
  lineinfile: "dest=/etc/neutron/metadata_agent.ini insertafter='^\\[DEFAULT' line='nova_metadata_ip = {{ controller_ip }}\n
  metadata_proxy_shared_secret = {{ metadata_secret }}' backup=yes state=present"
  become: true

- name: Configure neutron(16)
  lineinfile: "dest=/etc/nova/nova.conf insertafter='^\\[DEFAULT' line='nova_metadata_ip = {{ controller_ip }}\n
  metadata_proxy_shared_secret = {{ metadata_secret }}' backup=yes state=present"
  become: true

- name: Configure neutron(17)
  lineinfile: "dest=/etc/nova/nova.conf insertafter='EOF' line='\n[neutron]\n
  url = http://{{ controller_ip }}:9696\n
  auth_url = http://{{ controller_ip}}:35357\n
  auth_type = password\n
  project_domain_name = default\n
  user_domain_name = default\n
  region_name = RegionOne\n
  project_name = service\n
  username = neutron
  password = {{ neutron_passwd }}\n
  service_metadata_proxy = True\n
  metadata_proxy_shared_secret = {{ metadata_secret }}' backup=yes state=present"
  become: true

- name: Neutron dbsync
  shell: su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
  become: true

- name: Restart neutron
  service: name={{ item }} state=restarted
  with_items:
  - nova-api 
  - neutron-server 
  - neutron-linuxbridge-agent 
  - neutron-dhcp-agent
  - neutron-metadata-agent
  - neutron-l3-agent
  become: true
